{"version":3,"sources":["../src/to-property-key-x.js"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,sBAAvB;AACA,OAAO,WAAP,MAAwB,gBAAxB;AACA,OAAO,KAAP,MAAkB,aAAlB;AAEA;;;;;;;;AAOA,IAAM,aAAa,GAAG,SAAS,aAAT,CAAuB,QAAvB,EAAiC;AACrD,MAAM,GAAG,GAAG,WAAW,CAAC,QAAD,EAAW,MAAX,CAAvB;AAEA,SAAO,UAAU,IAAI,QAAO,GAAP,MAAe,QAA7B,GAAwC,GAAxC,GAA8C,KAAK,CAAC,GAAD,CAA1D;AACD,CAJD;;AAMA,eAAe,aAAf","file":"to-property-key-x.esm.js","sourcesContent":["import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n"]}